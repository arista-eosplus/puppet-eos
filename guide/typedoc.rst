**This page is autogenerated; any changes will get overwritten** *(last
generated on 2015-07-07 06:31:27 -0400)*

Resource Types
--------------

-  The *namevar* is the parameter used to uniquely identify a type
   instance. This is the parameter that gets assigned when a string is
   provided before the colon in a type declaration. In general, only
   developers will need to worry about which parameter is the
   ``namevar``.

In the following code:

::

      file { "/etc/passwd":
        owner => root,
        group => root,
        mode  => 644
      }

``/etc/passwd`` is considered the title of the file object (used for
things like dependency handling), and because ``path`` is the namevar
for ``file``, that string is assigned to the ``path`` parameter.

-  *Parameters* determine the specific configuration of the instance.
   They either directly modify the system (internally, these are called
   properties) or they affect how the instance behaves (e.g., adding a
   search path for ``exec`` instances or determining recursion on
   ``file`` instances).

-  *Providers* provide low-level functionality for a given resource
   type. This is usually in the form of calling out to external
   commands.

When required binaries are specified for providers, fully qualifed paths
indicate that the binary must exist at that specific path and
unqualified binaries indicate that Puppet will search for the binary
using the shell path.

-  *Features* are abilities that some providers might not support. You
   can use the list of supported features to determine how a given
   provider can be used.

Resource types define features they can use, and providers can be tested
to see which features they provide.

--------------

eos\_acl\_entry
~~~~~~~~~~~~~~~

This type provides management of ACLs on the Arista EOS node from within
Puppet.

Parameters
^^^^^^^^^^

acltype : The ACL type which is either standard and extended. Standard
ACLs filter only on the source IP address. Extended ACLs allow
specification of source and destination IP addresses.

Valid values are ``standard``, ``extended``.

action : The action for the rule can be either permit or deny. Deny is
the default value. Packets filtered by a permit rule are accepted by
interfaces to which the ACL is applied. Packets filtered by a deny rule
are dropped by interfaces to which the ACL is applied.

Valid values are ``permit``, ``deny``.

ensure : The basic property that the resource should be in.

Valid values are ``present``, ``absent``.

log : When set to true, triggers an informational log message to the
console about hte matching packet.

Valid values are ``true``, ``false``.

name : The name parameter is a composite namevar that combines the
access-list name and the sequence number delimited by the colon (:)
character

For example, if the access-list name is foo and the sequence number for
this rule is 10 the namvar would be constructed as "foo:10"

The composite namevar is required to uniquely identify the specific list
and rule to configure

provider : The specific backend to use for this ``eos_acl_entry``
resource. You will seldom need to specify this --- Puppet will usually
discover the appropriate provider for your platform.Available providers
are:

eos :

srcaddr : The source IP address. The following options are supported:

network\_address - subnet address where srcprefixlen defines mask any -
Packets from all addresses are filtered. host ip\_addr - IP address
(dotted decimal notation)

srcprefixlen : The source address prefix len used when srcaddr is a
network address to define the subnet. Values range from 0 to 32.

--------------

eos\_command
~~~~~~~~~~~~

Execute commands on the EOS node. Commands can be either priviledged
mode (enable) commands or configuration commands.

Parameters
^^^^^^^^^^

commands : The specific backend to use for this ``eos_command``
resource. You will seldom need to specify this --- Puppet will usually
discover the appropriate provider for your platform.Available providers
are:

eos :

--------------

eos\_ethernet
~~~~~~~~~~~~~

This type provides management of physical Ethernet interfaces on Arista
EOS nodes from within Puppet. Physical Ethernet interfaces include the
physical characteristics of front panel data plane ports with but does
not include the out-of-band Management interface.

Parameters
^^^^^^^^^^

description : The one line description to configure for the interface.
The description can be any valid alphanumeric string including symbols
and spaces.

enable : The enable value configures the administrative state of the
physical Ethernet interfaces. Valid values for enable are:

-  true - Administratively enables the Ethernet interface
-  false - Administratively disables the Ethernet interface

Valid values are ``true``, ``false``.

flowcontrol\_receive : This property configures the flowcontrol receive
value for the specified Ethernet interface. Valid values for flowcontrol
are:

-  on - Configures flowcontrol receive on
-  off - Configures flowcontrol receive off

Valid values are ``on``, ``off``.

flowcontrol\_send : This property configures the flowcontrol send value
for the specified Ethernet interface. Valid values for flowcontrol are:

-  on - Configures flowcontrol send on
-  off - Configures flowcontrol send off

Valid values are ``on``, ``off``.

name : The name of the physical interface to configure. The interface
name must coorelate to the full physical interface identifier in EOS.

provider : The specific backend to use for this ``eos_ethernet``
resource. You will seldom need to specify this --- Puppet will usually
discover the appropriate provider for your platform.Available providers
are:

eos :

--------------

eos\_interface
~~~~~~~~~~~~~~

This type provides management of Arista EOS interfaces. The type is used
as a basis type for any interface available in EOS and therefore the
properties are common across all interface types

Parameters
^^^^^^^^^^

description : The one line description to configure for the interface.
The description can be any valid alphanumeric string including symbols
and spaces.

enable : The enable value configures the administrative state of the
specified interface. Valid values for enable are:

-  true - Administratively enables the interface
-  false - Administratively disables the interface

Valid values are ``true``, ``false``.

ensure : The basic property that the resource should be in.

Valid values are ``present``, ``absent``.

name : The name parameter specifies the full interface identifier of the
Arista EOS interface to manage. This value must correspond to a valid
interface identifier in EOS.

provider : The specific backend to use for this ``eos_interface``
resource. You will seldom need to specify this --- Puppet will usually
discover the appropriate provider for your platform.Available providers
are:

eos :

--------------

eos\_ipinterface
~~~~~~~~~~~~~~~~

This type provides management of logical IP interfaces configured in
EOS. It provides configuration of IPv4 properties on physical interfaces
and logical virtual interfaces.

Parameters
^^^^^^^^^^

address : The address property configures the IPv4 address on the
specified interface. The address value is configured using address/mask
format.

For example

::

    address => 192.168.10.16/24

ensure : The basic property that the resource should be in.

Valid values are ``present``, ``absent``.

helper\_addresses : The helper\_addresses property configures the list
of IP helper addresses on the specified interface. IP helper addresses
configure a list of forwarding address to send send broadcast traffic to
as unicast, typically used to assist DHCP relay.

Helper addresses are configured using dotted decimal notation. For
example

::

    helper_addresses => ['192.168.10.254', '192.168.11.254']

mtu : The mtu property configures the IP interface MTU value which
specifies the largest IP datagram that can pass over the interface
without fragementation. The MTU value is specified in bytes and accepts
an integer in the range of 68 to 9214.

name : The name parameter specifies the full interface identifier of the
Arista EOS interface to manage. This value must correspond to a valid
interface identifier in EOS.

provider : The specific backend to use for this ``eos_ipinterface``
resource. You will seldom need to specify this --- Puppet will usually
discover the appropriate provider for your platform.Available providers
are:

eos :

--------------

eos\_mlag
~~~~~~~~~

This type manages the global MLAG instance on EOS nodes. It provides
configuration for global MLAG configuration parameters.

Parameters
^^^^^^^^^^

domain\_id : The domain\_id property configures the MLAG domain-id value
for the global MLAG configuration instance. The domain-id setting
identifies the domain name for the MLAG domain. Valid values include
alphanumeric characters

enable : The enable property configures the admininstrative state of the
global MLAG configuration. Valid values for enable are:

-  true - globally enables the MLAG configuration
-  false - glboally disables the MLAG configuration

Valid values are ``true``, ``false``.

local\_interface : The local\_interface property configures the MLAG
local-interface value for the global MLAG configuration instance. The
local-interface setting specifies the VLAN SVI to send MLAG control
traffic on.

Valid values must be a VLAN SVI identifier

name : The name parameter identifies the global MLAG instance for
configuration and should be configured as 'settings'. All other values
for name will be siliently ignored by the eos\_mlag provider.

peer\_address : The peer\_address property configures the MLAG
peer-address value for the global MLAG configuration instance. The
peer-address setting specifieds the MLAG peer control endpoint IP
address.

The specified value must be a valid IP address

peer\_link : The peer\_link property configures the MLAG peer-link value
for the glboal MLAG configuration instance. The peer-link setting
specifies the interface used to communicate control traffic to the MLAG
peer

The provided value must be a valid Ethernet or Port-Channel interface
identifer

provider : The specific backend to use for this ``eos_mlag`` resource.
You will seldom need to specify this --- Puppet will usually discover
the appropriate provider for your platform.Available providers are:

eos :

--------------

eos\_mlag\_interface
~~~~~~~~~~~~~~~~~~~~

This type manages MLAG interfaces on the node used to establish a valid
MLAG with a peer switch. The mlag\_id parameter is required for this
type.

Parameters
^^^^^^^^^^

ensure : The basic property that the resource should be in.

Valid values are ``present``, ``absent``.

mlag\_id : The mlag\_id property assigns a MLAG ID to a Port-Channel
interface used for forming a MLAG with a peer switch. Only one MLAG ID
can be associated with an interface.

Valid values are in the range of 1 to 2000

**Note** Changing this value on an operational link will cause traffic
distruption

name : The name property identifies the interface to be present or
absent from the MLAG interface list. The interface must be of type
portchannel.

This property expectes the full interface identifier

provider : The specific backend to use for this ``eos_mlag_interface``
resource. You will seldom need to specify this --- Puppet will usually
discover the appropriate provider for your platform.Available providers
are:

eos :

--------------

eos\_ntp\_config
~~~~~~~~~~~~~~~~

This type manages the nodes global NTP configuration settings. It
provides a configuration resource for setting global NTP values

Parameters
^^^^^^^^^^

name : The name parameter identifies the global NTP instance for
configuration and should be configured as 'settings'. All other values
for name will be siliently ignored by the provider.

provider : The specific backend to use for this ``eos_ntp_config``
resource. You will seldom need to specify this --- Puppet will usually
discover the appropriate provider for your platform.Available providers
are:

eos :

source\_interface : The source interface property provides configuration
management of the NTP source-interface value. The source interface value
configures the interface address to use as the source address when
sending NTP packets on the network.

The default value for source\_interface is ''

--------------

eos\_ntp\_server
~~~~~~~~~~~~~~~~

This type manages the list of NTP servers. It provides a configuration
resource for managing the list of NTP servers used by the node.

Parameters
^^^^^^^^^^

ensure : The basic property that the resource should be in.

Valid values are ``present``, ``absent``.

name : The name parameter configures the NTP server list by adding or
removing NTP server entries. The value can be configured as either the
host IP address or the fully qualified domain name of the desired NTP
server.

provider : The specific backend to use for this ``eos_ntp_server``
resource. You will seldom need to specify this --- Puppet will usually
discover the appropriate provider for your platform.Available providers
are:

eos :

--------------

eos\_portchannel
~~~~~~~~~~~~~~~~

This type manages Port-Channel interface instances on Arista EOS nodes.
It provides configuration resources for logical Port-Channel instances
and settings

Parameters
^^^^^^^^^^

description : The one line description to configure for the interface.
The description can be any valid alphanumeric string including symbols
and spaces.

The default value for description is ''

enable : The enable value configures the administrative state of the
specified interface. Valid values for enable are:

::

    * true - Administratively enables the interface
    * false - Administratively disables the interface

The default value for enable is :true

Valid values are ``true``, ``false``.

ensure : The basic property that the resource should be in.

Valid values are ``present``, ``absent``.

lacp\_fallback : The lacp\_fallback property configures the port-channel
lacp fallback setting in EOS for the specified interface. This setting
accepts the following values

::

    * static  - Fallback to static LAG mode
    * individual - Fallback to individual ports
    * disabled - Disable LACP fallback

The default value for lacp\_fallback is :disabled

Valid values are ``static``, ``individual``, ``disabled``.

lacp\_mode : The lacp\_mode property configures the LACP operating mode
of the Port-Channel interface. The LACP mode supports the following
valid values

::

    * active - Interface is an active LACP port that transmits and
        receives LACP negotiation packets.
    * passive - Interface is a passive LACP port that only responds
        to LACP negotiation packets.
    * on - Interface is a static port channel, LACP disabled.

The default value for lacp\_mode is :on

Valid values are ``active``, ``passive``, ``on``.

lacp\_timeout : The lacp\_timeout property configures the port-channel
lacp timeout value in EOS for the specified interface. The fallback
timeout configures the period an interface in fallback mode remains in
LACP mode without receiving a PDU.

The lacp\_timeout value is configured in seconds with a valid range
betwee 1 and 100.

The default value is 90

members : The members property manages the Array of physical interfaces
that comprise the logical Port-Channel interface. Each entry in the
members Array must be the full interface identifer of a physical
interface name.

The default value for members is []

minimum\_links : The minimum links property configures the port-channel
min-links value. This setting specifies the minimum number of physical
interfaces that must be operationally up for the Port-Channel interface
to be considered operationally up.

Valid range of values for the minimum\_links property are from 0 to 16.

The default value for minimum\_links is 0

name : The name parameter specifies the name of the Port-Channel
interface to configure. The value must be the full interface name
identifier that corresponds to a valid interface name in EOS.

provider : The specific backend to use for this ``eos_portchannel``
resource. You will seldom need to specify this --- Puppet will usually
discover the appropriate provider for your platform.Available providers
are:

eos :

--------------

eos\_snmp
~~~~~~~~~

This type manages the global SNMP configuration instance on EOS nodes.
It provides configuration resources for global SNMP settings.

Parameters
^^^^^^^^^^

chassis\_id : The chassis id propperty provides configuration management
of the SNMP chassis-id value. This setting typically provides
information to uniquely identify the SNMP agent host.

The default value for chassis\_id is ''

contact : The contact property provides configuration management of the
SNMP contact value. This setting provides informative text that
typically displays the name of a person or organization associated with
the SNMP agent.

The default value for contact is ''

location : The location property provides configuration management of
the SNMP location value. This setting typcially provides information
about the physical lcoation of the SNMP agent.

The default value for location is ''

name : The name parameter identifis the global SNMP instance for
configuration and should be configured as 'settings'. All other values
for name will be silently ignored by the eos\_snmp provider.

provider : The specific backend to use for this ``eos_snmp`` resource.
You will seldom need to specify this --- Puppet will usually discover
the appropriate provider for your platform.Available providers are:

eos :

source\_interface : The source interface property provides configuration
management of the SNMP source-interface value. The source interface
value configures the interface address to use as the source address when
sending SNMP packets on the network.

The default value for source\_interface is ''

--------------

eos\_stp\_config
~~~~~~~~~~~~~~~~

Configure global STP settings in EOS

Parameters
^^^^^^^^^^

mode : Specifies STP mode of operation

Valid values are ``mstp``, ``none``.

name : The resource name for the STP instance

provider : The specific backend to use for this ``eos_stp_config``
resource. You will seldom need to specify this --- Puppet will usually
discover the appropriate provider for your platform.Available providers
are:

eos :

--------------

eos\_stp\_interface
~~~~~~~~~~~~~~~~~~~

Manage Spanning Tree Protocol interface configuration.

Parameters
^^^^^^^^^^

bpduguard : Enable or disable the BPDU guard on a port. A BPDU
guard-enabled port is disabled when it receives a BPDU packet. Disabled
ports differ from blocked ports in that they are re-enabled only through
manual intervention. Valid BPDU guard values:

-  true - Enable the BPDU guard for the interface
-  false - Disable the BPDU guard for the interface (default value)

Valid values are ``true``, ``false``.

name : The name parameter specifies the full interface identifier of the
Arista EOS interface to manage. This value must correspond to a valid
interface identifier in EOS and must be either an Ethernet or Port
Channel interface.

portfast : The portfast property programs an STP port to immediately
enter forwarding state when they establish a link. PortFast ports are
included in spanning tree topology calculations and can enter blocking
state. Valid portfast values:

-  true - Enable portfast for the interface
-  false - Disable portfast for the interface (default value)

Valid values are ``true``, ``false``.

portfast\_type : Specifies the STP portfast mode type for the interface.
A port with edge type connect to hosts and transition to the forwarding
state when the link is established. An edge port that receives a BPDU
becomes a normal port. A port with network type connect only to switches
or bridges and support bridge assurance. Network ports that connect to
hosts or other edge devices transition ot the blocking state. Valid
portfast mode types:

-  edge - Set STP port mode type to edge.
-  network - Set STP port mode type to network.
-  normal - Set STP port mode type to normal (default value)

Valid values are ``edge``, ``network``, ``normal``.

provider : The specific backend to use for this ``eos_stp_interface``
resource. You will seldom need to specify this --- Puppet will usually
discover the appropriate provider for your platform.Available providers
are:

eos :

--------------

eos\_switchport
~~~~~~~~~~~~~~~

This type provides a resource for configuring logical layer 2
switchports in EOS. The resource provides configuration for both access
and trunk operating modes.

When creating a logical switchport interface, if the specified physical
interface was previously configured with an IP interface, the logical IP
interface will be removed.

Parameters
^^^^^^^^^^

access\_vlan : The access\_vlan property specifies the VLAN ID to be
used for untagged traffic that enters the switchport when configured in
access mode. If the switchport is configured for trunk mode, this value
is configured but has no effect. The value must be an integer in the
valid VLAN ID range of 1 to 4094.

The default value for the access\_vlan is 1

ensure : The basic property that the resource should be in.

Valid values are ``present``, ``absent``.

mode : The mode property configures the operating mode of the logical
switchport. Suppport modes of operation include access port or trunk
port. The default value for a new switchport is access

-  access - Configures the switchport mode to access
-  trunk - Configures the switchport mode to trunk

Valid values are ``access``, ``trunk``.

name : The name parameter specifies the full interface identifier of the
Arista EOS interface to manage. This value must correspond to a valid
interface identifier in EOS.

Only Ethernet and Port-Channel interfaces can be configured as
switchports.

provider : The specific backend to use for this ``eos_switchport``
resource. You will seldom need to specify this --- Puppet will usually
discover the appropriate provider for your platform.Available providers
are:

eos :

trunk\_allowed\_vlans : The trunk\_allowed\_vlans property configures
the list of VLAN IDs that are allowed to pass on the switchport operting
in trunk mode. If the switchport is configured for access mode, this
property is configured but has no effect.

The list of allowed VLANs must be configured as an Array with each entry
in the valid VLAN range of 1 to 4094.

The default value for a new switchport is to allow all valid VLAN IDs
(1-4094).

trunk\_native\_vlan : The trunk\_native\_vlan property specifies the
VLAN ID to be used for untagged traffic that enters the switchport in
trunk mode. If the switchport is configured for access mode, this value
is configured but has no effect. The value must be an integer in the
valid VLAN ID range of 1 to 4094.

The default value for the trunk\_natve\_vlan is 1

--------------

eos\_system
~~~~~~~~~~~

This type manages the global EOS node settings. It provides
configuration of global node attributes.

Parameters
^^^^^^^^^^

hostname : The global system hostname is a locally significant value
that identifies the host portion of the nodes fully qualified domain
name (FQDN).

The default hostname for a new system is localhost'

name : The name parameter identifies the global node instance for
configuration and should be configured as 'settings'. All other values
for name will be siliently ignored by the eos\_system provider.

provider : The specific backend to use for this ``eos_system`` resource.
You will seldom need to specify this --- Puppet will usually discover
the appropriate provider for your platform.Available providers are:

eos :

--------------

eos\_vlan
~~~~~~~~~

This type provides management of VLANs on the Arista EOS node from
within Puppet.

Parameters
^^^^^^^^^^

enable : The enable property configures the administrative state of the
VLAN ID. When enable is configured as true, the ports forward traffic
configured with the specified VLAN and when enable is false, the
specified VLAN ID is blocked. Valid VLAN ID values:

-  true - Administratively enable (active) the VLAN
-  false - Administratively disable (suspend) the VLAN

Valid values are ``true``, ``false``.

ensure : The basic property that the resource should be in.

Valid values are ``present``, ``absent``.

provider : The specific backend to use for this ``eos_vlan`` resource.
You will seldom need to specify this --- Puppet will usually discover
the appropriate provider for your platform.Available providers are:

eos :

trunk\_groups : The trunk\_groups property assigns an array of trunk
group names to the specified VLANs. A trunk group is the set of physical
interfaces that comprise the trunk and the collection of VLANs whose
traffic is carried only on ports that are members of the trunk gorups to
which the VLAN belongs

Example configuration

::

    trunk_groups => ['group1', 'group2']

The default configure is an empty list

vlan\_name : The vlan\_name property configures the alphanumber VLAN
name setting in EOS. TThe name consists of up to 32 characters. The
system will automatically truncate any value larger than 32 characters.

vlanid : (**Namevar:** If omitted, this parameter's value defaults to
the resource's title.)

The name parameter specifies the VLAN ID to manage on the node. The VLAN
ID parameter must be in the valid VLAN ID range of 1 to 4094 expressed
as a String.

--------------

eos\_vxlan
~~~~~~~~~~

This type mananges VXLAN interface configuration on Arista EOS nodes. It
provides configuration of logical Vxlan interface instances and settings

Parameters
^^^^^^^^^^

description : The one line description to configure for the interface.
The description can be any valid alphanumeric string including symbols
and spaces.

The default value for description is ''

enable : The enable value configures the administrative state of the
specified interface. Valid values for enable are:

::

    * true - Administratively enables the interface
    * false - Administratively disables the interface

The default value for enable is :true

Valid values are ``true``, ``false``.

ensure : The basic property that the resource should be in.

Valid values are ``present``, ``absent``.

multicast\_group : The multicast group property specifies the multicast
group address to use for VTEP communication. This value configures the
vxlan multicast-group value in EOS. The configured value must be a valid
multicast address in the range of 224/8.

The default value for multicast\_group is ''

name : The name parameter specifies the name of the Vxlan interface to
configure. The value must be the full interface name identifier that
corresponds to a valid interface name in EOS.

provider : The specific backend to use for this ``eos_vxlan`` resource.
You will seldom need to specify this --- Puppet will usually discover
the appropriate provider for your platform.Available providers are:

eos :

source\_interface : The source interface property specifies the
interface address to use to source Vxlan packets from. This value
configures the vxlan source-interface value in EOS

The default value for source\_interface is ''

udp\_port : The udp\_port property specifies the VXLAN UDP port
associated with sending and receiveing VXLAN traffic. This value
configures the vxlan udp-port value in EOS. The configured value must be
an integer in the range of 1024 to 65535.

The default value for the udp\_port setting is 4789

--------------

eos\_vxlan\_vlan
~~~~~~~~~~~~~~~~

This type manages the VXLAN VLAN to VNI mappings in the nodes current
running configuration. It provides a resources for ensuring specific
mappings are present or absent

Parameters
^^^^^^^^^^

ensure : The basic property that the resource should be in.

Valid values are ``present``, ``absent``.

name : The VLAN ID that is associated with this mapping in the valid
VLAN ID range of 1 to 4094. The VLAN ID is configured on the VXLAN VTI
with a one-to-one mapping to VNI.

provider : The specific backend to use for this ``eos_vxlan_vlan``
resource. You will seldom need to specify this --- Puppet will usually
discover the appropriate provider for your platform.Available providers
are:

eos :

vni : The VNI associate with the VLAN ID mapping on the VXLAN VTI
interface. The VNI value is an integer value in the range of 1 to
16777215.

--------------

eos\_vxlan\_vtep
~~~~~~~~~~~~~~~~

This type provides management of the global Vxlan VTEP flood list.

Parameters
^^^^^^^^^^

ensure : The basic property that the resource should be in.

Valid values are ``present``, ``absent``.

name : The name property associates the IPv4 flood address on the
specified VXLAN VNI interface. The address value is configured using
address format.

For example

::

    name => 192.168.10.16

provider : The specific backend to use for this ``eos_vxlan_vtep``
resource. You will seldom need to specify this --- Puppet will usually
discover the appropriate provider for your platform.Available providers
are:

eos :

--------------

*This page autogenerated on 2015-07-07 06:31:31 -0400*
