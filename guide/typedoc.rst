**This page is autogenerated; any changes will get overwritten** *(last
generated on 2016-12-09 12:51:26 -0500)*

Resource Types
--------------

-  The *namevar* is the parameter used to uniquely identify a type
   instance. This is the parameter that gets assigned when a string is
   provided before the colon in a type declaration. In general, only
   developers will need to worry about which parameter is the
   ``namevar``.

In the following code:

::

      file { "/etc/passwd":
        owner => "root",
        group => "root",
        mode  => "0644"
      }

``/etc/passwd`` is considered the title of the file object (used for
things like dependency handling), and because ``path`` is the namevar
for ``file``, that string is assigned to the ``path`` parameter.

-  *Parameters* determine the specific configuration of the instance.
   They either directly modify the system (internally, these are called
   properties) or they affect how the instance behaves (e.g., adding a
   search path for ``exec`` instances or determining recursion on
   ``file`` instances).

-  *Providers* provide low-level functionality for a given resource
   type. This is usually in the form of calling out to external
   commands.

When required binaries are specified for providers, fully qualified
paths indicate that the binary must exist at that specific path and
unqualified binaries indicate that Puppet will search for the binary
using the shell path.

-  *Features* are abilities that some providers might not support. You
   can use the list of supported features to determine how a given
   provider can be used.

Resource types define features they can use, and providers can be tested
to see which features they provide.

--------------

eos\_acl\_entry
~~~~~~~~~~~~~~~

Manage access-lists on Arista EOS.

Example:

::

    eos_acl_entry{ 'test1:10':
      ensure       => present,
      acltype      => standard,
      action       => permit,
      srcaddr      => '1.2.3.0',
      srcprefixlen => 8,
      log          => true,
    }

Parameters
^^^^^^^^^^

acltype : The ACL type which is either standard and extended. Standard
ACLs filter only on the source IP address. Extended ACLs allow
specification of source and destination IP addresses.

Valid values are ``standard``, ``extended``.

action : The action for the rule can be either permit or deny. Deny is
the default value. Packets filtered by a permit rule are accepted by
interfaces to which the ACL is applied. Packets filtered by a deny rule
are dropped by interfaces to which the ACL is applied.

Valid values are ``permit``, ``deny``.

ensure : The basic property that the resource should be in.

Valid values are ``present``, ``absent``.

log : When set to true, triggers an informational log message to the
console about hte matching packet.

Valid values are ``true``, ``false``.

name : The name parameter is a composite namevar that combines the
access-list name and the sequence number delimited by the colon (:)
character

For example, if the access-list name is foo and the sequence number for
this rule is 10 the namvar would be constructed as "foo:10"

The composite namevar is required to uniquely identify the specific list
and rule to configure

provider : The specific backend to use for this ``eos_acl_entry``
resource. You will seldom need to specify this --- Puppet will usually
discover the appropriate provider for your platform.Available providers
are:

eos
    Manage IP access-lists in Arista EOS. Requires rbeapi rubygem.

srcaddr : The source IP address. The following options are supported:

network\_address - subnet address where srcprefixlen defines mask any -
Packets from all addresses are filtered. host ip\_addr - IP address
(dotted decimal notation)

srcprefixlen : The source address prefix len used when srcaddr is a
network address to define the subnet. Values range from 0 to 32.

--------------

eos\_alias
~~~~~~~~~~

::

    Manage Arista EOS alias entries.

    Example:

        eos_alias { 'ru':
          command  => 'show ru',
        }
        eos_alias { 'desc':
          command => '1 conf

2 int %1 3 description %2 4 end end', }

Parameters
^^^^^^^^^^

command : The command to run when alias is used.

ensure : The basic property that the resource should be in.

Valid values are ``present``, ``absent``.

name : The: alias entry name.

provider : The specific backend to use for this ``eos_alias`` resource.
You will seldom need to specify this --- Puppet will usually discover
the appropriate provider for your platform.Available providers are:

eos
    Manage alias entries on Arista EOS. Requires rbeapi rubygem.

--------------

eos\_bgp\_config
~~~~~~~~~~~~~~~~

Manage the global BGP routing process on Arista EOS.

Example:

::

    eos_bgp_config { 65001:
      ensure             => present,
      enable             => true,
      router_id          => '192.0.2.4',
      maximum_paths      => 8,
      maximum_ecmp_paths => 8,
    }

Parameters
^^^^^^^^^^

bgp\_as : (**Namevar:** If omitted, this parameter's value defaults to
the resource's title.)

The BGP autonomous system number to be configured for the local BGP
routing instance. The value must be in the valid BGP AS range of 1 to
65535. The value is a String.

enable : Configures the administrative state for the global BGP routing
process. If enable is True then the BGP routing process is
administartively enabled and if enable is False then the BGP routing
process is administratively disabled.

Valid values are ``true``, ``yes``, ``on``, ``false``, ``no``, ``off``.

ensure : The basic property that the resource should be in.

Valid values are ``present``, ``absent``.

maximum\_ecmp\_paths : Maximum number of installed ECMP routes. This
value should be greater than or equal to maximum\_paths.

maximum\_paths : Maximum number of equal cost paths. This value should
be less than or equal to maximum\_ecmp\_paths.

provider : The specific backend to use for this ``eos_bgp_config``
resource. You will seldom need to specify this --- Puppet will usually
discover the appropriate provider for your platform.Available providers
are:

eos
    Manage global BGP routing process on Arista EOS. Requires rbeapi.

router\_id : Configures the BGP routing process router-id value. The
router id must be in the form of A.B.C.D

--------------

eos\_bgp\_neighbor
~~~~~~~~~~~~~~~~~~

Manage BGP neighbor configuration on Arista EOS.

Example:

::

    eos_bgp_neighbor { 'Edge':
      ensure         => present,
      enable         => true,
      description    => 'some text',
      send_community => true,
      route_map_in   => 'in_map',
      route_map_out  => 'out_map',
      next_hop_self  => false,
    }

    eos_bgp_neighbor { '192.0.3.1':
      ensure         => present,
      enable         => true,
      peer_group     => 'Edge',
      remote_as      => 65004,
      send_community => true,
      next_hop_self  => true,
    }

Parameters
^^^^^^^^^^

description : Configures the BGP neighbors description value. The value
specifies an arbitrary description to add to the neighbor statement in
the nodes running-configuration.

enable : Configures the administrative state for the BGP neighbor
process. If enable is True then the BGP neighbor process is
administartively enabled and if enable is False then the BGP neighbor
process is administratively disabled.

Valid values are ``true``, ``yes``, ``on``, ``false``, ``no``, ``off``.

ensure : The basic property that the resource should be in.

Valid values are ``present``, ``absent``.

name : The name of the BGP neighbor to manage. This value can be either
an IPv4 address or string (in the case of managing a peer group).

next\_hop\_self : Configures the BGP neighbors next-hop-self value. If
enabled then the BGP next-hop-self value is enabled. If disabled, then
the BGP next-hop-self community value is disabled

Valid values are ``enable``, ``disable``.

peer\_group : The name of the peer-group value to associate with the
neighbor. This argument is only valid if the neighbor is an IPv4
address.

provider : The specific backend to use for this ``eos_bgp_neighbor``
resource. You will seldom need to specify this --- Puppet will usually
discover the appropriate provider for your platform.Available providers
are:

eos
    Manage BGP neighbor configuration on Arista EOS. Requires rbeapi.

remote\_as : Configures the BGP neighbors remote-as value. Valid AS
values are in the range of 1 to 65535. The value is an Integer.

route\_map\_in : Configures the BGP neigbhors route-map in value. The
value specifies the name of the route-map.

route\_map\_out : Configures the BGP neigbhors route-map out value. The
value specifies the name of the route-map.

send\_community : Configures the BGP neighbors send-community value. If
enabled then the BGP send-community value is enable. If disabled, then
the BGP send-community value is disabled.

Valid values are ``enable``, ``disable``.

--------------

eos\_bgp\_network
~~~~~~~~~~~~~~~~~

Manage BGP network statements on Arista EOS.

Example:

::

    eos_bgp_network { '192.0.3.0/24':
      ensure    => present,
      route_map => 'neighbor3_map',
    }

Parameters
^^^^^^^^^^

ensure : The basic property that the resource should be in.

Valid values are ``present``, ``absent``.

name : The name is a composite name that contains the
IPv4\_Prefix/Masklen. The IPv4 prefix to configure as part of the
network statement. The value must be a valid IPv4 prefix. The IPv4
subnet mask length in bits. The value for the masklen must be in the
valid range of 1 to 32.

provider : The specific backend to use for this ``eos_bgp_network``
resource. You will seldom need to specify this --- Puppet will usually
discover the appropriate provider for your platform.Available providers
are:

eos
    Manage BGP network configuration on Arista EOS. Requires rbeapi.

route\_map : Configures the BGP route-map name to apply to the network
statement when configured. Note this module does not create the
route-map.

--------------

eos\_command
~~~~~~~~~~~~

::

    eos_command { 'Save running-config':
      mode     => 'enable',
      commands => 'copy running-config startup-config',
    }

Parameters
^^^^^^^^^^

commands : The specific backend to use for this ``eos_command``
resource. You will seldom need to specify this --- Puppet will usually
discover the appropriate provider for your platform.Available providers
are:

eos
    Exec commands on Arista EOS. Requires rbeapi rubygem.

--------------

eos\_config
~~~~~~~~~~~

Apply arbitrary configuration commands in Arista EOS. Commands will only
be applied based on the absence or presence of regular expression
matches. configuration for a specific command. If the command are either
present or absent, the eos\_config will configure the node using the
command argument.

Examples:

::

    eos_config { 'Set location':
      command => 'snmp-server location Here',
    }

    eos_config { 'Set interface description':
      section => 'interface Ethernet1',
      command => 'description My Description',
      regexp  => 'description [A-z]',
    }

Parameters
^^^^^^^^^^

command : Specifies the configuration command to send to the node if the
regexp does not evalute to true.

name : The name parameter is the name associated with the resource.

provider : The specific backend to use for this ``eos_config`` resource.
You will seldom need to specify this --- Puppet will usually discover
the appropriate provider for your platform.Available providers are:

eos
    Manage arbitrary config entries on EOS. Requires rbeapi rubygem.

regexp : Specifies the regular expression to use to evaluate the current
nodes running configuration. This optional argument will default to use
the command argument if none is provided.

section : Restricts the configuration evaluation to a single
configuration section. If the configuration section argument is not
provided, then the global configuration is used.

--------------

eos\_ethernet
~~~~~~~~~~~~~

Manage physical Ethernet interfaces on Arista EOS. Physical Ethernet
interfaces include the physical characteristics of front panel data
plane ports but does not include out-of-band Management interfaces.

Example:

::

    eos_ethernet { 'Ethernet3/17':
      enable              => true,
      description         => 'To switch2 Ethernet 1/3',
      flowcontrol_send    => on,
      flowcontrol_receive => on,
      speed               => 'forced 40gfull',
      lacp_priority       => 0,
    }

Parameters
^^^^^^^^^^

description : The one line description to configure for the interface.
The description can be any valid alphanumeric string including symbols
and spaces.

enable : The enable value configures the administrative state of the
physical Ethernet interfaces. Valid values for enable are:

-  true - Administratively enables the Ethernet interface
-  false - Administratively disables the Ethernet interface

Valid values are ``true``, ``false``.

flowcontrol\_receive : This property configures the flowcontrol receive
value for the specified Ethernet interface. Valid values for flowcontrol
are:

-  on - Configures flowcontrol receive on
-  off - Configures flowcontrol receive off

Valid values are ``on``, ``off``.

flowcontrol\_send : This property configures the flowcontrol send value
for the specified Ethernet interface. Valid values for flowcontrol are:

-  on - Configures flowcontrol send on
-  off - Configures flowcontrol send off

Valid values are ``on``, ``off``.

lacp\_priority : The lacp\_priority property specifies the lacp port
priority associated with the ethernet interface. The configured value
must be an integer in the range of 0 to 65535.

The default value for the lacp\_priority setting is 32768

name : The name of the physical interface to configure. The interface
name must coorelate to the full physical interface identifier in EOS.

provider : The specific backend to use for this ``eos_ethernet``
resource. You will seldom need to specify this --- Puppet will usually
discover the appropriate provider for your platform.Available providers
are:

eos
    Manage ethernet interfaces on EOS. Requires rbeapi rubygem.

speed : This property configures the interface speed for the specified
Ethernet interface. Valid values for speed are:

-  'default'
-  '100full'
-  '10full'
-  'auto'
-  'auto 100full'
-  'auto 10full'
-  'auto 40gfull'
-  'forced 10000full'
-  'forced 1000full'
-  'forced 1000half'
-  'forced 100full'
-  'forced 100gfull'
-  'forced 100half'
-  'forced 10full'
-  'forced 10half'
-  'forced 25gfull'
-  'forced 40gfull'
-  'forced 50gfull'
-  'sfp-1000baset auto 100full'

Valid values are ``default``, ``100full``, ``10full``, ``auto``,
``auto 100full``, ``auto 10full``, ``auto 40gfull``,
``forced 10000full``, ``forced 1000full``, ``forced 1000half``,
``forced 100full``, ``forced 100gfull``, ``forced 100half``,
``forced 10full``, ``forced 10half``, ``forced 25gfull``,
``forced 40gfull``, ``forced 50gfull``, ``sfp-1000baset auto 100full``.

--------------

eos\_interface
~~~~~~~~~~~~~~

Manage common attributes of all Arista EOS interfaces.

Example:

::

    eos_interface { 'Management1':
      enable      => true,
      description => 'OOB management to mgmt-sw1 Ethernet42',
      autostate   => true,
    }
    eos_interface { 'Ethernet1.10':
      enable        => true,
      encapsulation => '10',
    }

Parameters
^^^^^^^^^^

autostate : This option configures autostate on a VLAN interface. Valid
values for enable are:

-  true - Enable autostate (default setting on EOS)
-  false - Set no autostate

Valid values are ``true``, ``false``.

description : The one line description to configure for the interface.
The description can be any valid alphanumeric string including symbols
and spaces.

enable : The enable value configures the administrative state of the
specified interface. Valid values for enable are:

-  true - Administratively enables the interface
-  false - Administratively disables the interface

Valid values are ``true``, ``false``.

encapsulation : The vlan ID to use in encapsulation dot1q vlab
configurations for sub interfaces.

ensure : The basic property that the resource should be in.

Valid values are ``present``, ``absent``.

load\_interval : The load interval of an interface.

name : The name parameter specifies the full interface identifier of the
Arista EOS interface to manage. This value must correspond to a valid
interface identifier in EOS.

provider : The specific backend to use for this ``eos_interface``
resource. You will seldom need to specify this --- Puppet will usually
discover the appropriate provider for your platform.Available providers
are:

eos
    Manage interfaces on EOS. Requires rbeapi rubygem.

--------------

eos\_ipinterface
~~~~~~~~~~~~~~~~

Manage logical IP (L3) interfaces in Arista EOS. Used for IPv4 physical
interfaces and logical virtual interfaces.

Example:

::

    eos_ipinterface { 'Ethernet3':
      address => '192.0.3.2/24',
      mtu     => 1514,

    }
    eos_ipinterface { 'Vlan201':
      address          => '192.0.2.1/24',
      helper_addresses => ['192.168.10.254', '192.168.11.254'],
    }

Parameters
^^^^^^^^^^

address : The address property configures the IPv4 address on the
specified interface. The address value is configured using address/mask
format.

For example

::

    address => 192.168.10.16/24

ensure : The basic property that the resource should be in.

Valid values are ``present``, ``absent``.

helper\_addresses : The helper\_addresses property configures the list
of IP helper addresses on the specified interface. IP helper addresses
configure a list of forwarding address to send send broadcast traffic to
as unicast, typically used to assist DHCP relay.

Helper addresses are configured using dotted decimal notation. For
example

::

    helper_addresses => ['192.168.10.254', '192.168.11.254']

mtu : The mtu property configures the IP interface MTU value which
specifies the largest IP datagram that can pass over the interface
without fragementation. The MTU value is specified in bytes and accepts
an integer in the range of 68 to 9214.

name : The name parameter specifies the full interface identifier of the
Arista EOS interface to manage. This value must correspond to a valid
interface identifier in EOS.

provider : The specific backend to use for this ``eos_ipinterface``
resource. You will seldom need to specify this --- Puppet will usually
discover the appropriate provider for your platform.Available providers
are:

eos
    Manage L3 interfaces on EOS. Requires rbeapi rubygem.

--------------

eos\_logging\_host
~~~~~~~~~~~~~~~~~~

Manage logging destination hosts in Arista EOS to receive syslog
messages.

Example:

::

    eos_logging_host { '10.0.0.150': }

Parameters
^^^^^^^^^^

ensure : The basic property that the resource should be in.

Valid values are ``present``, ``absent``.

name : The parameter specifies the name for the logging host. It should
be in either IP format or FQDN format.

provider : The specific backend to use for this ``eos_logging_host``
resource. You will seldom need to specify this --- Puppet will usually
discover the appropriate provider for your platform.Available providers
are:

eos
    Manage logging hosts on EOS. Requires rbeapi rubygem.

--------------

eos\_managementdefaults
~~~~~~~~~~~~~~~~~~~~~~~

Configure the management defaults on Arista EOS. It allows to set the
value for secret hash. Accepted values are: md5 and sha512

Example:

::

    eos_managementdefaults { 'settings':
      secret_hash     => 'sha512',
    }

Parameters
^^^^^^^^^^

name : The name parameter identifies the global management defaults
configuration and should be configured as 'settings'. All other values
for name will be silently ignored by the eos\_managementdefaults
provider.

provider : The specific backend to use for this
``eos_managementdefaults`` resource. You will seldom need to specify
this --- Puppet will usually discover the appropriate provider for your
platform.Available providers are:

eos
    Configure management defaults on EOS. Requires rbeapi rubygem.

secret\_hash : The secret\_hash property configures the hash algoritm to
use to store secrets.

--------------

eos\_mlag
~~~~~~~~~

Manage the global MLAG instance on Arista EOS. It provides configuration
for global MLAG configuration parameters.

Example:

::

    eos_mlag { 'settings':
      enable          => true,
      domain_id       => 'SPINE-MLAG',
      local_interface => 'Vlan4094',
      peer_address    => '192.168.0.2',
      peer_link       => 'Port-Channel900',
    }

Parameters
^^^^^^^^^^

domain\_id : The domain\_id property configures the MLAG domain-id value
for the global MLAG configuration instance. The domain-id setting
identifies the domain name for the MLAG domain. Valid values include
alphanumeric characters

enable : The enable property configures the admininstrative state of the
global MLAG configuration. Valid values for enable are:

-  true - globally enables the MLAG configuration
-  false - glboally disables the MLAG configuration

Valid values are ``true``, ``false``.

local\_interface : The local\_interface property configures the MLAG
local-interface value for the global MLAG configuration instance. The
local-interface setting specifies the VLAN SVI to send MLAG control
traffic on.

Valid values must be a VLAN SVI identifier

name : The name parameter identifies the global MLAG instance for
configuration and should be configured as 'settings'. All other values
for name will be siliently ignored by the eos\_mlag provider.

peer\_address : The peer\_address property configures the MLAG
peer-address value for the global MLAG configuration instance. The
peer-address setting specifieds the MLAG peer control endpoint IP
address.

The specified value must be a valid IP address

peer\_link : The peer\_link property configures the MLAG peer-link value
for the glboal MLAG configuration instance. The peer-link setting
specifies the interface used to communicate control traffic to the MLAG
peer

The provided value must be a valid Ethernet or Port-Channel interface
identifer

provider : The specific backend to use for this ``eos_mlag`` resource.
You will seldom need to specify this --- Puppet will usually discover
the appropriate provider for your platform.Available providers are:

eos
    Manage MLAG configuration on EOS. Requires rbeapi rubygem.

--------------

eos\_mlag\_interface
~~~~~~~~~~~~~~~~~~~~

Manage MLAG interfaces on Arista EOS. Configure a valid MLAG with a peer
switch. The mlag\_id parameter is required.

Example:

::

    eos_mlag_interface { 'Port-Channel10':
      mlag_id => 10,
    }

Parameters
^^^^^^^^^^

ensure : The basic property that the resource should be in.

Valid values are ``present``, ``absent``.

mlag\_id : The mlag\_id property assigns a MLAG ID to a Port-Channel
interface used for forming a MLAG with a peer switch. Only one MLAG ID
can be associated with an interface.

Valid values are in the range of 1 to 2000

**Note** Changing this value on an operational link will cause traffic
distruption

name : The name property identifies the interface to be present or
absent from the MLAG interface list. The interface must be of type
portchannel.

This property expectes the full interface identifier

provider : The specific backend to use for this ``eos_mlag_interface``
resource. You will seldom need to specify this --- Puppet will usually
discover the appropriate provider for your platform.Available providers
are:

eos
    Manage MLAG interface configuration on EOS. Requires rbeapi rubygem.

--------------

eos\_mst\_instance
~~~~~~~~~~~~~~~~~~

Configure MST instance settings.

Example:

::

    eos_mst_instance { '0':
      priority => 8192,
    }

Parameters
^^^^^^^^^^

ensure : The basic property that the resource should be in.

Valid values are ``present``, ``absent``.

name : The name parameter specifies the MST instance identifier of the
Arista EOS MST instance identifier to manage. This value must correspond
to a valid MST instance identifier in EOS. It's value must be between 0
and 4094.

priority : Specifies the MST bridge priority. The MST priority must have
a value between 0 and 61440 in increments of 4096.

provider : The specific backend to use for this ``eos_mst_instance``
resource. You will seldom need to specify this --- Puppet will usually
discover the appropriate provider for your platform.Available providers
are:

eos
    Manage MST instance configuration on EOS. Requires rbeapi rubygem.

--------------

eos\_ntp\_config
~~~~~~~~~~~~~~~~

Manage global NTP configuration settings on Arista EOS.

Example:

::

    eos_ntp_config { 'settings':
      source_interface => 'Management1',
    }

Parameters
^^^^^^^^^^

name : The name parameter identifies the global NTP instance for
configuration and should be configured as 'settings'. All other values
for name will be siliently ignored by the provider.

provider : The specific backend to use for this ``eos_ntp_config``
resource. You will seldom need to specify this --- Puppet will usually
discover the appropriate provider for your platform.Available providers
are:

eos
    Manage global NTP configuration on EOS. Requires rbeapi rubygem.

source\_interface : The source interface property provides configuration
management of the NTP source-interface value. The source interface value
configures the interface address to use as the source address when
sending NTP packets on the network.

The default value for source\_interface is ''

--------------

eos\_ntp\_server
~~~~~~~~~~~~~~~~

Manage the list of NTP servers on Arista EOS.

Example:

::

    eos_ntp_server { '174.127.117.113':
      ensure => present,
    }

    # Remove all un-managed servers
    resources { 'eos_snmp': purge => true }

Parameters
^^^^^^^^^^

ensure : The basic property that the resource should be in.

Valid values are ``present``, ``absent``.

name : The name parameter configures the NTP server list by adding or
removing NTP server entries. The value can be configured as either the
host IP address or the fully qualified domain name of the desired NTP
server.

provider : The specific backend to use for this ``eos_ntp_server``
resource. You will seldom need to specify this --- Puppet will usually
discover the appropriate provider for your platform.Available providers
are:

eos
    Manage NTP server definitions on EOS. Requires rbeapi rubygem.

--------------

eos\_ospf\_instance
~~~~~~~~~~~~~~~~~~~

Manage OSPF instance configuration.

Example:

::

    eos_ospf_instance { '1':
      router_id                 => 192.168.1.1,
      max_lsa                   => 12000,
      maximum_paths             => 16,
      passive_interfaces        => [],
      active_interfaces         => ['Ethernet49', 'Ethernet50'],
      passive_interface_default => true,
    }

Parameters
^^^^^^^^^^

active\_interfaces : The active\_interface property configures all ospf
enabled interfaces on the specified ospf instance. The active\_interface
property must be an array of EOS interfaces.

For example

::

    active_interfaces => ['Ethernet49', 'Ethernet50', 'Vlan4093'],

ensure : The basic property that the resource should be in.

Valid values are ``present``, ``absent``.

max\_lsa : The max\_lsa property configures the LSA Overload on the
specified ospf instance. The max\_lsa property must have a value between
0 and 100000. The max\_lsa property specifies the maximum number of LSAs
allowed in an LSDB database and configures the switch behavior when the
limit is approached or exceeded.

For example

::

    max_lsa => 12000,

maximum\_paths : The maximum\_paths property configures the
maximum-paths on the specified ospf instance. The maximum\_paths
property must have a value between 1 and N where N is the number of
interfaces available per ECMP group. The maximum\_paths command controls
the number of parallel routes that OSPFv2 supports. The default maximum
is 16 paths.

For example

::

    maximum_paths => 16,

name : The name parameter specifies the ospf intstance identifier of the
Arista EOS ospf instance to manage. This value must correspond to a
valid ospf instance identifier in EOS and must have a value between 1
and 65535.

passive\_interface\_default : The passive\_interface\_default property
configures all interfaces passive by default on the specified ospf
instance. The switch advertises the passive interface as part of the
router LSA. The passive\_interface\_default value must be true or false.
When it is set to false, all interfaces are OSPFv2 active by default and
passive interfaces must be specified in the passive\_interfaces
property. When passive\_interface\_default is set to true, all
interfaces are OSPFv2 passive by default and active interfaces must be
specified in the active\_interfaces property.

For example

::

    passive_interface_default => false,

Valid values are ``true``, ``false``.

passive\_interfaces : The passive\_interface property configures all
ospf disabled interfaces on the specified ospf instance. The
passive\_interface property must be an array of EOS interfaces.

For example

::

    passive_interfaces => ['Loopback0'],

provider : The specific backend to use for this ``eos_ospf_instance``
resource. You will seldom need to specify this --- Puppet will usually
discover the appropriate provider for your platform.Available providers
are:

eos
    Manage OSPF instances on EOS. Requires rbeapi rubygem.

router\_id : The router\_id property configures the router id on the
specified ospf instance. The router\_id value must be a valid IPv4
address. The router ID is a 32-bit number assigned to a router running
OSPFv2. This number uniquely labels the router within an Autonomous
System. Status commands identify the switch through the router ID.

For example

::

    router_id => 192.168.1.1

--------------

eos\_ospf\_interface
~~~~~~~~~~~~~~~~~~~~

Manage OSPF interface settings on Arista EOS. Will create interface with
the designated name if none exists when assigning the ospf network type.

Example:

::

    eos_ospf_interface { 'Ethernet1':
      network_type => 'point-to-point',
    }

Parameters
^^^^^^^^^^

ensure : The basic property that the resource should be in.

Valid values are ``present``, ``absent``.

name : Resource name for the OSPF interface instance.

network\_type : The network\_type property configures the OSPF operating
mode on the interface. The supportet OSPF interface modes are the
following:

-  point-to-point - Configures the ospf network type to point-to-point
-  broadcast - Configures the ospf network type to broadcast

By default, interfaces are configured as broadcast links.

provider : The specific backend to use for this ``eos_ospf_interface``
resource. You will seldom need to specify this --- Puppet will usually
discover the appropriate provider for your platform.Available providers
are:

eos
    Manage OSPF interface config on Arista EOS. Requires rbeapi rubygem.

--------------

eos\_ospf\_network
~~~~~~~~~~~~~~~~~~

Manage OSPF network statements.

Example:

::

    eos_ospf_network { '192.168.10.0/24':
      instance_id => 1,
      area        => 0.0.0.0,
    }

Parameters
^^^^^^^^^^

area : The area property configures the ospf area of the specified ospf
network. The area property must be a valid area in the dotted decimal
notation (ip address).

For example

::

    area => 0.0.0.0,

ensure : The basic property that the resource should be in.

Valid values are ``present``, ``absent``.

instance\_id : The instance\_id parameter specifies the ospf intstance
identifier of the Arista EOS ospf instance which contains the ospf
network to manage. This value must correspond to a valid ospf instance
identifier in EOS and must have a value between 1 and 65535.

name : The name parameter specifies the ospf network address identifier
of the Arista EOS ospf network to manage. This value must correspond to
a valid ip network address including a network mask length in EOS and
must have a value between 0.0.0.0/1 and 255.255.255.255/32.

provider : The specific backend to use for this ``eos_ospf_network``
resource. You will seldom need to specify this --- Puppet will usually
discover the appropriate provider for your platform.Available providers
are:

eos
    Manage OSPF networks on EOS. Requires rbeapi rubygem.

--------------

eos\_ospf\_redistribution
~~~~~~~~~~~~~~~~~~~~~~~~~

Manage OSPF redistribution settings on Arista EOS.

Example:

::

    eos_ospf_redistribution { 'static':
      instance_id => '1',
      route_map   => 'test',
    }
    eos_ospf_redistribution { 'connected':
      instance_id => '1',
    }

Parameters
^^^^^^^^^^

ensure : The basic property that the resource should be in.

Valid values are ``present``, ``absent``.

instance\_id : The instance\_id parameter specifies the ospf intstance
identifier of the Arista EOS ospf instance which contains the ospf
network to manage. This value must correspond to a valid ospf instance
identifier in EOS and must have a value between 1 and 65535.

name : Protocol name for the OSPF redistribution.

provider : The specific backend to use for this
``eos_ospf_redistribution`` resource. You will seldom need to specify
this --- Puppet will usually discover the appropriate provider for your
platform.Available providers are:

eos
    Manage OSPF redistributions on EOS. Requires rbeapi rubygem.

route\_map : The route\_map property attaches a route map to the OSPF
redistribution. By default, no route\_map is configured.

--------------

eos\_portchannel
~~~~~~~~~~~~~~~~

Manage logical Port-Channel interfaces on Arista EOS.

Example:

::

    eos_portchannel { 'Port-Channel30':
      ensure        => present,
      description   => 'Host 39b',
      minimum_links => 2,
      lacp_mode     => active,
      lacp_fallback => individual,
      lacp_timeout  => 30,
    }

    eos_portchannel { 'Port-Channel31':
      ensure => absent,
    }

Parameters
^^^^^^^^^^

description : The one line description to configure for the interface.
The description can be any valid alphanumeric string including symbols
and spaces.

The default value for description is ''

enable : The enable value configures the administrative state of the
specified interface. Valid values for enable are:

::

    * true - Administratively enables the interface
    * false - Administratively disables the interface

The default value for enable is :true

Valid values are ``true``, ``false``.

ensure : The basic property that the resource should be in.

Valid values are ``present``, ``absent``.

lacp\_fallback : The lacp\_fallback property configures the port-channel
lacp fallback setting in EOS for the specified interface. This setting
accepts the following values

::

    * static  - Fallback to static LAG mode
    * individual - Fallback to individual ports
    * disabled - Disable LACP fallback

The default value for lacp\_fallback is :disabled

Valid values are ``static``, ``individual``, ``disabled``.

lacp\_mode : The lacp\_mode property configures the LACP operating mode
of the Port-Channel interface. The LACP mode supports the following
valid values

::

    * active - Interface is an active LACP port that transmits and
        receives LACP negotiation packets.
    * passive - Interface is a passive LACP port that only responds
        to LACP negotiation packets.
    * on - Interface is a static port channel, LACP disabled.

The default value for lacp\_mode is :on

Valid values are ``active``, ``passive``, ``on``.

lacp\_timeout : The lacp\_timeout property configures the port-channel
lacp timeout value in EOS for the specified interface. The fallback
timeout configures the period an interface in fallback mode remains in
LACP mode without receiving a PDU.

The lacp\_timeout value is configured in seconds.

members : The members property manages the Array of physical interfaces
that comprise the logical Port-Channel interface. Each entry in the
members Array must be the full interface identifer of a physical
interface name.

The default value for members is []

minimum\_links : The minimum links property configures the port-channel
min-links value. This setting specifies the minimum number of physical
interfaces that must be operationally up for the Port-Channel interface
to be considered operationally up.

Valid range of values for the minimum\_links property are from 0 to 16.

The default value for minimum\_links is 0

name : The name parameter specifies the name of the Port-Channel
interface to configure. The value must be the full interface name
identifier that corresponds to a valid interface name in EOS.

provider : The specific backend to use for this ``eos_portchannel``
resource. You will seldom need to specify this --- Puppet will usually
discover the appropriate provider for your platform.Available providers
are:

eos
    Manage port-channel interfaces on EOS. Requires rbeapi rubygem.

--------------

eos\_prefixlist
~~~~~~~~~~~~~~~

Configures prefix lists in EOS

Parameters
^^^^^^^^^^

action : Rule type, either a permit or deny

Valid values are ``permit``, ``deny``.

ensure : The basic property that the resource should be in.

Valid values are ``present``, ``absent``.

eq : Mask length for the conditional operator 'equal'. Allowed values
1-32.

ge : Mask length for the conditional operator 'greater than'. Allowed
values 1-32.

le : Mask length for the conditional operator 'less than'. Allowed
values 1-32.

masklen : The network prefix mask length.

name : The name parameter is a composite namevar that combines the
prefix-list name and the sequence number delimited by the colon (:)
character

For example, if the prefix-list name is foo and the sequence number for
this rule is 10 the namevar would be constructed as "foo:10"

The composite namevar is required to uniquely identify the specific list
and rule to configure

prefix : The network prefix to match

prefix\_list : Name of the prefix list

provider : The specific backend to use for this ``eos_prefixlist``
resource. You will seldom need to specify this --- Puppet will usually
discover the appropriate provider for your platform.Available providers
are:

eos
    Manage prefix lists on Arista EOS. Requires rbeapi rubygem.

seqno : Rule sequence number

--------------

eos\_routemap
~~~~~~~~~~~~~

Manage route-maps on Arista EOS.

Examples:

::

    eos_routemap { 'my_routemap:10':
      description => 'test 10',
      action      => permit,
      match       => 'ip address prefix-list 8to24',
    }

    eos_routemap { 'bgp_map:10':
      action   => permit,
      match    => 'as 10',
      set      => 'local-preference 100',
      continue => 20,
    }

    eos_routemap { 'bgp_map:20':
      action => permit,
      match  => [' metric-type type-1', 'as 100'],
    }

Parameters
^^^^^^^^^^

action : A description for the route-map.

continue : A route-map sequence number to continue on.

description : A description for the route-map.

ensure : The basic property that the resource should be in.

Valid values are ``present``, ``absent``.

match : Route map match rule.

name : The name of the routemap namevar composite name:seqno.

provider : The specific backend to use for this ``eos_routemap``
resource. You will seldom need to specify this --- Puppet will usually
discover the appropriate provider for your platform.Available providers
are:

eos
    Manage routemaps on Arista EOS. Requires rbeapi rubygem

set : Set route attribute.

--------------

eos\_snmp
~~~~~~~~~

Manage global SNMP configuration on Arista EOS.

Example:

::

    eos_snmp { 'settings':
      contact          => 'DC02-ops@example.com',
      location         => 'DC02 POD12 Rack3'
      chassis_id       => 'JMB00000',
      source_interface => 'Loopback0',
    }

Parameters
^^^^^^^^^^

chassis\_id : The chassis id propperty provides configuration management
of the SNMP chassis-id value. This setting typically provides
information to uniquely identify the SNMP agent host.

The default value for chassis\_id is ''

contact : The contact property provides configuration management of the
SNMP contact value. This setting provides informative text that
typically displays the name of a person or organization associated with
the SNMP agent.

The default value for contact is ''

location : The location property provides configuration management of
the SNMP location value. This setting typcially provides information
about the physical lcoation of the SNMP agent.

The default value for location is ''

name : The name parameter identifis the global SNMP instance for
configuration and should be configured as 'settings'. All other values
for name will be silently ignored by the eos\_snmp provider.

provider : The specific backend to use for this ``eos_snmp`` resource.
You will seldom need to specify this --- Puppet will usually discover
the appropriate provider for your platform.Available providers are:

eos
    Manage global SNMP configuration on EOS. Requires rbeapi rubygem.

source\_interface : The source interface property provides configuration
management of the SNMP source-interface value. The source interface
value configures the interface address to use as the source address when
sending SNMP packets on the network.

The default value for source\_interface is ''

--------------

eos\_staticroute
~~~~~~~~~~~~~~~~

Manage static routes in EOS.

Examples:

::

    eos_staticroute { '192.168.99.0/24/10.0.0.254': }

    eos_staticroute { '192.168.99.0/24/10.0.0.1':
      ensure => absent,
    }

    eos_staticroute { '192.168.10.0/24/Ethernet1':
      route_name => 'Edge10',
      distance   => 3,
    }

Parameters
^^^^^^^^^^

distance : Administrative distance of the route. Valid values are 1-255.

ensure : The basic property that the resource should be in.

Valid values are ``present``, ``absent``.

name : A composite string consisting of //. (namevar)

prefix - IP destination subnet prefix masklen - Number of mask bits to
apply to the destination next\_hop - Next\_hop IP address or interface
name

provider : The specific backend to use for this ``eos_staticroute``
resource. You will seldom need to specify this --- Puppet will usually
discover the appropriate provider for your platform.Available providers
are:

eos
    Manage static routes on EOS. Requires rbeapi rubygem.

route\_name : The name assigned to the static route

tag : Route tag (0-255)

--------------

eos\_stp\_interface
~~~~~~~~~~~~~~~~~~~

Manage Spanning Tree Protocol interface configuration.

Example:

::

    eos_stp_interface { 'Ethernet16':
      portfast      => true,
      portfast_type => network,
      bpduguard     => false,
    }

Parameters
^^^^^^^^^^

bpduguard : Enable or disable the BPDU guard on a port. A BPDU
guard-enabled port is disabled when it receives a BPDU packet. Disabled
ports differ from blocked ports in that they are re-enabled only through
manual intervention. Valid BPDU guard values:

-  true - Enable the BPDU guard for the interface
-  false - Disable the BPDU guard for the interface (default value)

Valid values are ``true``, ``false``.

name : The name parameter specifies the full interface identifier of the
Arista EOS interface to manage. This value must correspond to a valid
interface identifier in EOS and must be either an Ethernet or Port
Channel interface.

portfast : The portfast property programs an STP port to immediately
enter forwarding state when they establish a link. PortFast ports are
included in spanning tree topology calculations and can enter blocking
state. Valid portfast values:

-  true - Enable portfast for the interface
-  false - Disable portfast for the interface (default value)

Valid values are ``true``, ``false``.

portfast\_type : Specifies the STP portfast mode type for the interface.
A port with edge type connect to hosts and transition to the forwarding
state when the link is established. An edge port that receives a BPDU
becomes a normal port. A port with network type connect only to switches
or bridges and support bridge assurance. Network ports that connect to
hosts or other edge devices transition ot the blocking state. Valid
portfast mode types:

-  edge - Set STP port mode type to edge.
-  network - Set STP port mode type to network.
-  normal - Set STP port mode type to normal (default value)

Valid values are ``edge``, ``network``, ``normal``.

provider : The specific backend to use for this ``eos_stp_interface``
resource. You will seldom need to specify this --- Puppet will usually
discover the appropriate provider for your platform.Available providers
are:

eos
    Manage interface spanning-tree settings on Arista EOS. Requires
    rbeapi

--------------

eos\_switchconfig
~~~~~~~~~~~~~~~~~

Manage the complete EOS config as a file

Use files, templates, or concatenated files/template blocks to build and
manage the entire EOS configuration as a single object. By default,
changes will be written to flash:puppet-config then the 'configure
replace' in EOS will safely overwrite the running-config.

Examples:

::

    eos_switchconfig { 'running-config':
      source  => template(),
    }

    eos_switchconfig { 'running-config':
      content => template(),
    }


    eos_switchconfig { 'running-config':
      source  => template(),
      file    => 'config-puppet',
    }

Parameters
^^^^^^^^^^

content : The content is a string or URI to a file to be used as the EOS
running-config.

ensure : The basic property that the resource should be in.

Valid values are ``present``, ``absent``.

name : The name of this resource should always be 'running-config'

provider : The specific backend to use for this ``eos_switchconfig``
resource. You will seldom need to specify this --- Puppet will usually
discover the appropriate provider for your platform.Available providers
are:

eos
    Manage the entire running-config on Arista EOS. Requires rbeapi.

source : Source is a list of templates which will be concatenated to
create the desired running-config.

Example configuration

source => ['tg1', 'tg2']

The default configure is an empty list

staging\_file : The staging\_file is the actual file which will be
managed on flash: on the switch before running 'configure replace'.

The default value is 'puppet-config' stored on flash:.

--------------

eos\_switchport
~~~~~~~~~~~~~~~

Manage logical layer 2 switchports in EOS.

When creating a logical switchport interface, if the specified physical
interface was previously configured with an IP interface, the logical IP
interface will be removed.

Examples:

::

    eos_switchport { 'Ethernet14':
      mode        => access,
      access_vlan => 200,
    }

    eos_switchport { 'Ethernet15':
      mode                => trunk,
      trunk_allowed_vlans => ['1', '100-104', '110', '2000-2099'],
      trunk_native_vlan   => 10,
      trunk_groups        => [tg1, tg2],
    }

Parameters
^^^^^^^^^^

access\_vlan : The access\_vlan property specifies the VLAN ID to be
used for untagged traffic that enters the switchport when configured in
access mode. If the switchport is configured for trunk mode, this value
is configured but has no effect. The value must be an integer in the
valid VLAN ID range of 1 to 4094.

The default value for the access\_vlan is 1

ensure : The basic property that the resource should be in.

Valid values are ``present``, ``absent``.

mode : The mode property configures the operating mode of the logical
switchport. Suppport modes of operation include access port or trunk
port. The default value for a new switchport is access

-  access - Configures the switchport mode to access
-  trunk - Configures the switchport mode to trunk

Valid values are ``access``, ``trunk``.

name : The name parameter specifies the full interface identifier of the
Arista EOS interface to manage. This value must correspond to a valid
interface identifier in EOS.

Only Ethernet and Port-Channel interfaces can be configured as
switchports.

provider : The specific backend to use for this ``eos_switchport``
resource. You will seldom need to specify this --- Puppet will usually
discover the appropriate provider for your platform.Available providers
are:

eos
    Manage L2 interface settings on Arista EOS. Requires rbeapi rubygem.

trunk\_allowed\_vlans : The trunk\_allowed\_vlans property configures
the list of VLAN IDs that are allowed to pass on the switchport operting
in trunk mode. If the switchport is configured for access mode, this
property is configured but has no effect.

The list of allowed VLANs must be configured as an Array with each entry
in the valid VLAN range of 1 to 4094.

The default value for a new switchport is to allow all valid VLAN IDs
(1-4094).

trunk\_groups : The trunk\_groups property assigns an array of trunk
group names to the specified switchport/portchannel. A trunk group is
the set of interfaces that comprise the trunk and the collection of
VLANs whose traffic is carried only on ports that are members of the
trunk groups to which the VLAN belongs.

Example configuration

trunk\_groups => ['tg1', 'tg2']

The default configure is an empty list

trunk\_native\_vlan : The trunk\_native\_vlan property specifies the
VLAN ID to be used for untagged traffic that enters the switchport in
trunk mode. If the switchport is configured for access mode, this value
is configured but has no effect. The value must be an integer in the
valid VLAN ID range of 1 to 4094.

The default value for the trunk\_natve\_vlan is 1

--------------

eos\_system
~~~~~~~~~~~

Manage global EOS switch settings.

Example:

::

    eos_system { 'settings':
      hostname   => 'dc02-pod2-rack3-leaf1',
      ip_routing => true,
    }

Parameters
^^^^^^^^^^

hostname : The global system hostname is a locally significant value
that identifies the host portion of the nodes fully qualified domain
name (FQDN).

The default hostname for a new system is localhost'

ip\_routing : Configures the ip routing state

Valid values are ``true``, ``yes``, ``on``, ``false``, ``no``, ``off``.

name : The name parameter identifies the global node instance for
configuration and should be configured as 'settings'. All other values
for name will be siliently ignored by the eos\_system provider.

provider : The specific backend to use for this ``eos_system`` resource.
You will seldom need to specify this --- Puppet will usually discover
the appropriate provider for your platform.Available providers are:

eos
    Manage global system settings on Arista EOS. Requires rbeapi
    rubygem.

--------------

eos\_user
~~~~~~~~~

Manage Arista EOS user accounts.

Example:

::

    $pub_key = 'ssh-rsa AAAAB3u...QHLzF9 admin@example.com'

    eos_user { 'admin':
      privilege  => 15,
      role       => 'network-admin',
      encryption => sha512,
      secret     => '$1$rnfsWaC6$ZFPdsxxLS4wvSCA9p1wGg/',
      sshkey     => $pub_key,
    }

Parameters
^^^^^^^^^^

encryption : Defines the encryption format of the password provided in
the corresponding secret key. Note that cleartext passwords are allowed
via manual CLI user creation but are not supported in this module due to
security concerns and idempotency.

Valid values are ``md5``, ``md5``, ``sha512``, ``sha512``.

ensure : The basic property that the resource should be in.

Valid values are ``present``, ``absent``.

name : The switch CLI username.

nopassword : Create a user with no password assigned.

Valid values are ``true``, ``yes``, ``on``, ``false``, ``no``, ``off``.

privilege : Configures the privilege level for the user. Permitted
values are integers between 0 and 15. The EOS default privilege is 1.

provider : The specific backend to use for this ``eos_user`` resource.
You will seldom need to specify this --- Puppet will usually discover
the appropriate provider for your platform.Available providers are:

eos
    Manage user accounts on Arista EOS. Requires rbeapi rubygem.

role : Configures the role assigned to the user. The EOS default for
this attribute is managed with aaa authorization policy local
default-role; this is typically the network-operator role.

secret : This key is used in conjunction with encryption. The value
should be a hashed password that was previously generated.

sshkey : Configures an sshkey for the CLI user. This sshkey will end up
in /home/USER/.ssh/authorized\_keys. Typically this is the public key
from the client SSH node.

--------------

eos\_varp
~~~~~~~~~

Manage global VARP settings on Arista EOS. Configure the Virtual-ARP mac
address.

Example:

::

    eos_varp { 'settings':
        mac_address => '001c.7300.0099',
    }

Parameters
^^^^^^^^^^

ensure : The basic property that the resource should be in.

Valid values are ``present``, ``absent``.

mac\_address : Assigns a virtual MAC address to the switch.

name : Resource name defaults to 'settings' and is not used to configure
EOS. Returns an error if a name other than 'settings' is specified.

provider : The specific backend to use for this ``eos_varp`` resource.
You will seldom need to specify this --- Puppet will usually discover
the appropriate provider for your platform.Available providers are:

eos
    Manage global VARP virtual MAC address on Arista EOS. Requires
    rbeapi.

--------------

eos\_varp\_interface
~~~~~~~~~~~~~~~~~~~~

Manage VARP interface settings on Arista EOS. Will create interface with
the designated name if none exists when assigning Virtual-ARP shared\_ip
addresses.

Example:

::

    eos_varp_interface { 'Vlan2':
      shared_ip => '192.0.2.1',
    }

Parameters
^^^^^^^^^^

ensure : The basic property that the resource should be in.

Valid values are ``present``, ``absent``.

name : Resource name for the VARP interface instance.

provider : The specific backend to use for this ``eos_varp_interface``
resource. You will seldom need to specify this --- Puppet will usually
discover the appropriate provider for your platform.Available providers
are:

eos
    Manage interface VARP config on Arista EOS. Requires rbeapi rubygem.

shared\_ip : Array of virtual IP addresses for the interface.

--------------

eos\_vlan
~~~~~~~~~

Manage VLANs on Arista EOS.

Examples:

::

    eos_vlan { '1':
      vlan_name => 'default',
    }

    eos_vlan { '4094':
      enable       => true,
      vlan_name    => 'MLAG_control',
      trunk_groups => ['trunkpeer'],
    }

    # Remove all un-managed VLANs
    resources { 'eos_vlan': purge => true }

Parameters
^^^^^^^^^^

enable : The enable property configures the administrative state of the
VLAN ID. When enable is configured as true, the ports forward traffic
configured with the specified VLAN and when enable is false, the
specified VLAN ID is blocked. Valid VLAN ID values:

-  true - Administratively enable (active) the VLAN
-  false - Administratively disable (suspend) the VLAN

Valid values are ``true``, ``false``.

ensure : The basic property that the resource should be in.

Valid values are ``present``, ``absent``.

provider : The specific backend to use for this ``eos_vlan`` resource.
You will seldom need to specify this --- Puppet will usually discover
the appropriate provider for your platform.Available providers are:

eos
    Manage VLANs on Arista EOS. Requires rbeapi rubygem.

trunk\_groups : The trunk\_groups property assigns an array of trunk
group names to the specified VLANs. A trunk group is the set of physical
interfaces that comprise the trunk and the collection of VLANs whose
traffic is carried only on ports that are members of the trunk gorups to
which the VLAN belongs

Example configuration

::

    trunk_groups => ['group1', 'group2']

The default configure is an empty list

vlan\_name : The vlan\_name property configures the alphanumber VLAN
name setting in EOS. TThe name consists of up to 32 characters. The
system will automatically truncate any value larger than 32 characters.

vlanid : (**Namevar:** If omitted, this parameter's value defaults to
the resource's title.)

The name parameter specifies the VLAN ID to manage on the node. The VLAN
ID parameter must be in the valid VLAN ID range of 1 to 4094 expressed
as a String.

--------------

eos\_vrrp
~~~~~~~~~

Manage VRRP settings on Arista EOS. Configures the Virtual Router
Redundancy Protocol settings.

Example:

::

    eos_vrrp { 'Vlan50:10':
      description      => 'Virtual IP'
      priority         => 100,
      preempt          => true,
      primary_ip       => '192.0.2.1',
      secondary_ip     => ['10.2.4.5'],
      timers_advertise => 10,
    }

Parameters
^^^^^^^^^^

delay\_reload : Delay between system reboot and VRRP initialization.
Value must be a postive integer. Default value is 0.

description : Associates a text string to a virtual router.

enable : Enable the virtual router. Default value is :true

Valid values are ``true``, ``yes``, ``on``, ``false``, ``no``, ``off``.

ensure : The basic property that the resource should be in.

Valid values are ``present``, ``absent``.

ip\_version : The VRRP version for the VRRP virtual router. Valid values
are 2 and 3. Default value is 2.

mac\_addr\_adv\_interval : Interval in seconds between advertisement
packets sent to VRRP group members. Value must be a postive integer.
Default value is 30.

name : The name parameter is a composite namevar that combines the name
of the layer 3 interface with the virtual router ID. The virtual router
ID must be between 1 - 255. Both values are seperated by the colon (:)
character

For example, if the interface name is Vlan50 and the virtual router ID
is 10 then the namvar would be constructed as "Vlan50:10"

The composite namevar is required to uniquely identify the specific
layer 3 interface and virtual router ID to configure.

preempt : A virtual router preempt mode setting. When preempt mode is
enabled, if the switch has a higher priority it will preempt the current
master virtual router. When preempt mode is disabled, the switch can
become the master virtual router only when a master virtual router is
not present on the subnet, regardless of priority settings. Default
value is :true

Valid values are ``true``, ``yes``, ``on``, ``false``, ``no``, ``off``.

preempt\_delay\_min : The minimum time in seconds for the virtual router
to wait before taking over the active role. Value must be a postive
integer. Default value is 0.

preempt\_delay\_reload : The preemption delay after a reload only. This
delay period applies only to the first interface-up event after the
router has reloaded. Value must be a postive integer. Default value is
0.

primary\_ip : The primary IPv4 address for the specified VRRP virtual
router. The address must be in the form of A.B.C.D. Default value is
0.0.0.0

priority : The priority setting for the virtual router. The value must
be between 1 and 254. Default value is 100.

provider : The specific backend to use for this ``eos_vrrp`` resource.
You will seldom need to specify this --- Puppet will usually discover
the appropriate provider for your platform.Available providers are:

eos
    Manage Virtual Router (VRRP) settings on Arista EOS. Requires rbeapi

secondary\_ip : The secondary IPv4 address array for the specified
virtual router. The IP address list must be identical for all VRRP
routers in a virtual router group. The array cannot be empty. The
address must be in the form of A.B.C.D

timers\_advertise : The interval between successive advertisement
messages that the switch sends to routers in the specified virtual
router ID. The value must be between 1 and 255. Default value is 1.

track : Array of track settings. Each option in the array is a hash
containing track settings. An example of the track property follows:
track: [ { name: 'Ethernet2', action: 'decrement', amount: 33 }, { name:
'Ethernet2', action: 'decrement', amount: 22 }, { name: 'Ethernet2',
action: 'shutdown' } ]

The hash key definitions for a track entry follow: name - Name of an
interface to track. action - Action to take on state-change of the
tracked interface. amount - Amount to decrement the priority. Only
specified if the action is set to 'decrement'.

--------------

eos\_vxlan
~~~~~~~~~~

Manange VXLAN interface configuration on Arista EOS. Configure logical
Vxlan interface instances and settings

Example:

::

    eos_vxlan { 'Vxlan1':
      source_interface => 'Loopback1',
      udp_port         => 5500,
    }

Parameters
^^^^^^^^^^

description : The one line description to configure for the interface.
The description can be any valid alphanumeric string including symbols
and spaces.

The default value for description is ''

enable : The enable value configures the administrative state of the
specified interface. Valid values for enable are:

::

    * true - Administratively enables the interface
    * false - Administratively disables the interface

The default value for enable is :true

Valid values are ``true``, ``false``.

ensure : The basic property that the resource should be in.

Valid values are ``present``, ``absent``.

multicast\_group : The multicast group property specifies the multicast
group address to use for VTEP communication. This value configures the
vxlan multicast-group value in EOS. The configured value must be a valid
multicast address in the range of 224/8.

The default value for multicast\_group is ''

name : The name parameter specifies the name of the Vxlan interface to
configure. The value must be the full interface name identifier that
corresponds to a valid interface name in EOS.

provider : The specific backend to use for this ``eos_vxlan`` resource.
You will seldom need to specify this --- Puppet will usually discover
the appropriate provider for your platform.Available providers are:

eos
    Manage global VxLAN settings on Arista EOS. Requires rbeapi

source\_interface : The source interface property specifies the
interface address to use to source Vxlan packets from. This value
configures the vxlan source-interface value in EOS

The default value for source\_interface is ''

udp\_port : The udp\_port property specifies the VXLAN UDP port
associated with sending and receiveing VXLAN traffic. This value
configures the vxlan udp-port value in EOS. The configured value must be
an integer in the range of 1024 to 65535.

The default value for the udp\_port setting is 4789

--------------

eos\_vxlan\_vlan
~~~~~~~~~~~~~~~~

Manage VXLAN VLAN to VNI mappings in Arista EOS.

Examples:

::

    eos_vxlan_vlan { '100':
      vni => '100',
    }

    eos_vxlan_vlan { '200':
      vni => '10.10.200',
    }

Parameters
^^^^^^^^^^

ensure : The basic property that the resource should be in.

Valid values are ``present``, ``absent``.

name : The VLAN ID that is associated with this mapping in the valid
VLAN ID range of 1 to 4094. The VLAN ID is configured on the VXLAN VTI
with a one-to-one mapping to VNI.

provider : The specific backend to use for this ``eos_vxlan_vlan``
resource. You will seldom need to specify this --- Puppet will usually
discover the appropriate provider for your platform.Available providers
are:

eos
    Manage VxLAN VLANs on Arista EOS. Requires rbeapi

vni : The VNI associate with the VLAN ID mapping on the VXLAN VTI
interface. The VNI value is an integer value in the range of 1 to
16777215.

--------------

eos\_vxlan\_vtep
~~~~~~~~~~~~~~~~

Manage the global Vxlan VTEP flood list on Arista EOS.

Example:

::

    eos_vxlan_vtep { '10.1.1.1': }

Parameters
^^^^^^^^^^

ensure : The basic property that the resource should be in.

Valid values are ``present``, ``absent``.

name : The name property associates the IPv4 flood address on the
specified VXLAN VNI interface. The address value is configured using
address format.

Example

::

    name => 192.168.10.16

provider : The specific backend to use for this ``eos_vxlan_vtep``
resource. You will seldom need to specify this --- Puppet will usually
discover the appropriate provider for your platform.Available providers
are:

eos
    Manage global VxLAN VTEP flood list on Arista EOS. Requires rbeapi.

--------------

*This page autogenerated on 2016-12-09 12:51:33 -0500*
